package eu.sergiolopes.nbp.project.general;

import java.io.File;
import javax.swing.JFileChooser;
import org.openide.filesystems.FileUtil;
import org.openide.util.NbPreferences;

public final class PlayPanel extends javax.swing.JPanel {

    private final PlayOptionsPanelController controller;

    PlayPanel(PlayOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        myOwnInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtActivatorPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnOpenFileChooser = new javax.swing.JButton();
        lblNoInstallDir = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtScalaTemplateIndent = new javax.swing.JFormattedTextField();
        txtRoutesIndent = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSBTIndent = new javax.swing.JFormattedTextField();
        lblError = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jLabel1.text")); // NOI18N

        txtActivatorPath.setText(org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.txtActivatorPath.text")); // NOI18N
        txtActivatorPath.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtActivatorPathFocusLost(evt);
            }
        });
        txtActivatorPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtActivatorPathKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnOpenFileChooser, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.btnOpenFileChooser.text")); // NOI18N
        btnOpenFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileChooserActionPerformed(evt);
            }
        });

        lblNoInstallDir.setBackground(new java.awt.Color(255, 153, 153));
        lblNoInstallDir.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        lblNoInstallDir.setForeground(new java.awt.Color(204, 0, 0));
        org.openide.awt.Mnemonics.setLocalizedText(lblNoInstallDir, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.lblNoInstallDir.text")); // NOI18N
        lblNoInstallDir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102)));
        lblNoInstallDir.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jLabel3.text")); // NOI18N

        txtScalaTemplateIndent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtScalaTemplateIndent.setText(org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.txtScalaTemplateIndent.text")); // NOI18N
        txtScalaTemplateIndent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtScalaTemplateIndentKeyReleased(evt);
            }
        });

        txtRoutesIndent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtRoutesIndent.setText(org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.txtRoutesIndent.text")); // NOI18N
        txtRoutesIndent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRoutesIndentKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.jLabel5.text")); // NOI18N

        txtSBTIndent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtSBTIndent.setText(org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.txtSBTIndent.text")); // NOI18N
        txtSBTIndent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSBTIndentKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSBTIndent, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtRoutesIndent, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtScalaTemplateIndent, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtScalaTemplateIndent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtRoutesIndent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSBTIndent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, jLabel4, jLabel5, txtRoutesIndent, txtSBTIndent, txtScalaTemplateIndent});

        lblError.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lblError.setForeground(new java.awt.Color(204, 0, 0));
        lblError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eu/sergiolopes/nbp/error.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblError, org.openide.util.NbBundle.getMessage(PlayPanel.class, "PlayPanel.lblError.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNoInstallDir, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtActivatorPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOpenFileChooser))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtActivatorPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenFileChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblNoInstallDir)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileChooserActionPerformed
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fc.getSelectedFile();
            String absolutePath = selectedFile.getAbsolutePath();
            txtActivatorPath.setText(absolutePath);
            if (absolutePath.trim().isEmpty()) {
                lblNoInstallDir.setVisible(true);
            } else {
                storeActivatorInstallDir();
                lblNoInstallDir.setVisible(false);
            }
        }

    }//GEN-LAST:event_btnOpenFileChooserActionPerformed

    private void txtActivatorPathFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtActivatorPathFocusLost
        storeActivatorInstallDir();
    }//GEN-LAST:event_txtActivatorPathFocusLost

    private void txtSBTIndentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSBTIndentKeyReleased
        storeSBTIndent();
    }//GEN-LAST:event_txtSBTIndentKeyReleased

    private void txtActivatorPathKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtActivatorPathKeyReleased
        valid();
    }//GEN-LAST:event_txtActivatorPathKeyReleased

    private void txtScalaTemplateIndentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtScalaTemplateIndentKeyReleased
        storeScalaTemplateIndent();
    }//GEN-LAST:event_txtScalaTemplateIndentKeyReleased

    private void txtRoutesIndentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRoutesIndentKeyReleased
        storeRoutesIndent();
    }//GEN-LAST:event_txtRoutesIndentKeyReleased

    void load() {
        txtActivatorPath.setText(NbPreferences.forModule(PlayPanel.class).get(ACTIVATOR_EXECUTABLE_PATH, ""));
        if (txtActivatorPath.getText().trim().isEmpty()) {
            lblNoInstallDir.setVisible(true);
        }
        txtScalaTemplateIndent.setText(NbPreferences.forModule(PlayPanel.class).get(SCALA_TEMPLATE_INDENT_SPACES, "4"));
        txtRoutesIndent.setText(NbPreferences.forModule(PlayPanel.class).get(ROUTES_INDENT_SPACES, "4"));
        txtSBTIndent.setText(NbPreferences.forModule(PlayPanel.class).get(SBT_INDENT_SPACES, "4"));
    }

    void store() {
        storeActivatorInstallDir();
        storeScalaTemplateIndent();
        storeRoutesIndent();
        storeSBTIndent();
    }

    private void storeSBTIndent() {
        NbPreferences.forModule(PlayPanel.class).put(SBT_INDENT_SPACES, txtSBTIndent.getText());
    }

    private void storeRoutesIndent() {
        NbPreferences.forModule(PlayPanel.class).put(ROUTES_INDENT_SPACES, txtRoutesIndent.getText());
    }

    private void storeScalaTemplateIndent() {
        NbPreferences.forModule(PlayPanel.class).put(SCALA_TEMPLATE_INDENT_SPACES, txtScalaTemplateIndent.getText());
    }

    private void storeActivatorInstallDir() {
        if (valid()) {
            NbPreferences.forModule(PlayPanel.class).put(ACTIVATOR_EXECUTABLE_PATH, txtActivatorPath.getText());
        }
    }

    boolean valid() {
        /*final File destFolder = FileUtil.normalizeFile(new File(txtActivatorPath.getText()).getAbsoluteFile());
        if (!destFolder.exists()) {
            showError("Folder does not exists");
            return false;
        }
        if (!destFolder.isDirectory()) {
            showError("Folder is not a directory");
            return false;
        }
        File[] children = destFolder.listFiles();
        if (children != null && children.length > 0) {
            boolean hasActivatorExecutable = false;
            for (File child : children) {
                if (child.getName().equals("activator")) {
                    hasActivatorExecutable = true;
                }
            }

            if (!hasActivatorExecutable) {
                showError("there's no an executable activator file in this folder. Invalid Path");
                return false;
            }
        }

        hideError();*/
        //TODO: Re-implement this to use SBT
        return true;
    }

    private void showError(String errorMessage) {
        lblError.setText(errorMessage);
        lblError.setVisible(true);
    }

    private void hideError() {
        lblError.setText("");
        lblError.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpenFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblNoInstallDir;
    private javax.swing.JTextField txtActivatorPath;
    private javax.swing.JFormattedTextField txtRoutesIndent;
    private javax.swing.JFormattedTextField txtSBTIndent;
    private javax.swing.JFormattedTextField txtScalaTemplateIndent;
    // End of variables declaration//GEN-END:variables
    public static final String ACTIVATOR_EXECUTABLE_PATH = "ACTIVATOR_EXECUTABLE_PATH";
    public static final String SCALA_TEMPLATE_INDENT_SPACES = "SCALA_TEMPLATE_INDENT_SPACES";
    public static final String ROUTES_INDENT_SPACES = "ROUTES_INDENT_SPACES";
    public static final String SBT_INDENT_SPACES = "SBT_INDENT_SPACES";
    private final JFileChooser fc = new JFileChooser();

    private void myOwnInitComponents() {
        lblNoInstallDir.setVisible(false);
        lblError.setVisible(false);
    }
}
